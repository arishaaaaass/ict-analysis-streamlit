import streamlit as st
import sqlite3
import pandas as pd
import plotly.graph_objects as go
import seaborn as sns
import matplotlib.pyplot as plt

# === 1. –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö ===
import os
conn = sqlite3.connect(os.path.join(os.path.dirname(__file__), 'ict_analysis.db'))

df_macro = pd.read_sql("SELECT * FROM macro_ict_data", conn)
df_forecast = pd.read_sql("SELECT * FROM forecast_results", conn)
df_desc = pd.read_sql("SELECT * FROM indicator_description", conn)

# === 2. –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ ===
st.title("üìä –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ò–ö–¢ –∏ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ")

# === 3. –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–∞–±–ª–∏—Ü ===
with st.expander("üìÅ –ü–æ–∫–∞–∑–∞—Ç—å –º–∞–∫—Ä–æ—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ"):
    st.dataframe(df_macro)

with st.expander("üìà –ü—Ä–æ–≥–Ω–æ–∑ SARIMAX"):
    st.dataframe(df_forecast)

with st.expander("üßæ –û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π"):
    st.dataframe(df_desc)

# === 4. –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ä—è–¥–∞ –ò–ö–¢ ===
st.subheader("–î–∏–Ω–∞–º–∏–∫–∞ –ò–ö–¢-—É—Å–ª—É–≥ —Å 2010 –ø–æ 2024")
fig1 = go.Figure()
fig1.add_trace(go.Scatter(x=df_macro["year"], y=df_macro["ict_services"],
                          mode='lines+markers', name='–ò–ö–¢-—É—Å–ª—É–≥–∏'))
fig1.update_layout(xaxis_title="–ì–æ–¥", yaxis_title="–ò–ö–¢ (—Ç—Ä–ª–Ω —Ä—É–±.)")
st.plotly_chart(fig1)

# === 5. –ü—Ä–æ–≥–Ω–æ–∑ SARIMAX (–≥—Ä–∞—Ñ–∏–∫ —Å –¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏) ===
st.subheader("–ü—Ä–æ–≥–Ω–æ–∑ –ò–ö–¢-—É—Å–ª—É–≥ –ø–æ SARIMAX (2025‚Äì2029)")
df_forecast = df_forecast[df_forecast["model_type"] == "SARIMAX"]

fig2 = go.Figure()
fig2.add_trace(go.Scatter(x=df_forecast["year"], y=df_forecast["forecast_value"],
                          mode='lines+markers', name='–ü—Ä–æ–≥–Ω–æ–∑'))
fig2.add_trace(go.Scatter(x=df_forecast["year"], y=df_forecast["lower_bound"],
                          line=dict(dash='dot'), name='–ù–∏–∂–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞'))
fig2.add_trace(go.Scatter(x=df_forecast["year"], y=df_forecast["upper_bound"],
                          line=dict(dash='dot'), name='–í–µ—Ä—Ö–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞'))
fig2.update_layout(xaxis_title="–ì–æ–¥", yaxis_title="–ò–ö–¢ (—Ç—Ä–ª–Ω —Ä—É–±.)")
st.plotly_chart(fig2)

# === 6. –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è ===
st.subheader("üìå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Å—Ü–µ–Ω–∞—Ä–∏–π: —Ä–∞—Å—Å—á–∏—Ç–∞–π —Å–≤–æ–π –ø—Ä–æ–≥–Ω–æ–∑")
col1, col2 = st.columns(2)
with col1:
    inf = st.number_input("–ò–Ω—Ñ–ª—è—Ü–∏—è (%)", value=7.0)
    gdp = st.number_input("–í–í–ü (—Ç—Ä–ª–Ω —Ä—É–±.)", value=150.0)
with col2:
    unemp = st.number_input("–ë–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞ (%)", value=4.5)
    rnd = st.number_input("–ù–ò–û–ö–† (% –æ—Ç –í–í–ü)", value=1.0)

# === 7. –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ —Ä–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ ===
coef = {
    'const': -9587.10,
    'inflation': 59.54,
    'gdp': 43.45,
    'unemployment': 94.29,
    'rnd': 7968.23
}
ict_pred = (
    coef['const']
    + coef['inflation'] * inf
    + coef['gdp'] * gdp
    + coef['unemployment'] * unemp
    + coef['rnd'] * rnd
)
st.success(f"–ü—Ä–æ–≥–Ω–æ–∑ –æ–±—ä—ë–º–∞ –ò–ö–¢-—É—Å–ª—É–≥: {ict_pred:.2f} —Ç—Ä–ª–Ω —Ä—É–±.")
